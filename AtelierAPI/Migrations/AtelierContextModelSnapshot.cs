// <auto-generated />
using System;
using AtelierAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtelierAPI.Migrations
{
    [DbContext(typeof(AtelierContext))]
    partial class AtelierContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AtelierShared.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Concept Development"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Design & Prototyping"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Manufacturing & Production"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Sustainability & Green Technology"
                        });
                });

            modelBuilder.Entity("AtelierShared.Models.InitiativePost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("InitiativePosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 3,
                            Content = "Implement automated robotic systems for precision cutting and assembly of wind turbine blades. This will reduce production time by 20% and minimize material waste.",
                            DatePublished = new DateTime(2024, 12, 6, 4, 19, 15, 39, DateTimeKind.Utc).AddTicks(4104),
                            Title = "Improve Blade Manufacturing Efficiency"
                        });
                });

            modelBuilder.Entity("AtelierShared.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateJoined = new DateTime(2024, 12, 6, 4, 19, 15, 38, DateTimeKind.Utc).AddTicks(8875),
                            Email = "316333@viauc.dk",
                            Password = "hashed_password",
                            Role = "Admin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AtelierShared.Models.InitiativePost", b =>
                {
                    b.HasOne("AtelierShared.Models.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
