@page "/Auth/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

@using AtelierShared.Models
@using Microsoft.AspNetCore.Components.Forms




<style>
    .login-container {
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
</style>

<div class="login-container">
    <h3>Login</h3>
    <EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="username" class="form-label">Username</label>
            <InputText id="username" class="form-control" @bind-Value="loginRequest.Username" />
        </div>

        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <InputText id="password" class="form-control" @bind-Value="loginRequest.Password" type="password" />
        </div>

        <button type="submit" class="btn btn-primary">Login</button>
    </EditForm>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:5062/api/Auth/login", loginRequest);
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                Console.WriteLine("Login successful!");
                Console.WriteLine($"JWT Token: {result?.Token}");

                // Store JWT token in local storage
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", result?.Token);

                // Redirect to main page
                Navigation.NavigateTo("/");
            }
            else
            {
                Console.WriteLine("Login failed.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during login: {ex.Message}");
        }
    }

    private class LoginResponse
    {
        public string? Token { get; set; }
    }
}
